<?php

/**
 * @file
 * Order Reports for Drupal Commerce
 *
 * This file contains all the major functionality for adding robust reporting
 * to the Drupal Commerce system.
 */

/**
 * Implements hook_enable().
 */
function commerce_order_reports_enable() {
  // Adds a unix timestamp field to Commerce Order's to track checkout time
  commerce_order_reports_order_configuration();
}

/**
 * Ensures the order checkout timestamp is present on the default order bundle.
 */
function commerce_order_reports_order_configuration($type = 'commerce_order') {
  // If a field type we know should exist isn't found, clear the Field cache.
  if (!field_info_field_types('datestamp')) {
    field_cache_clear();
  }

  // Look for or add an order checkout timestamp field to the order type.
  $field_name = 'commerce_order_reports_checkout';
  $field = field_info_field($field_name);
  $instance = field_info_instance('commerce_order', $field_name, $type);
  if (empty($field)) {
    $field = commerce_order_reports_timestamp_field($field_name);
    $field = field_create_field($field);
  }
  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'commerce_order',
      'bundle' => $type,
      'label' => t('Checkout Timestamp'),
      'settings' => array(),
      'widget' => array(
        'type' => 'date_select',
        'module' => 'date',
      ),
    );

    // Set the default display formatters for various view modes.
    foreach (array('default', 'customer', 'administrator') as $view_mode) {
      $instance['display'][$view_mode] = array(
        'label' => 'hidden',
        'type' => 'hidden',
      );
    }

    field_create_instance($instance);
  }
}

function commerce_order_reports_timestamp_field($field_name) {
  $field = array(
    'field_name' => $field_name,
    'type' => 'datestamp',
    'cardinality' => 1,
    'entity_types' => array('commerce_order'),
    'translatable' => FALSE,
    'locked' => TRUE,
  );
  return $field;
}
